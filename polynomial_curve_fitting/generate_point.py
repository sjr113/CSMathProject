import numpy as np
import matplotlib.pyplot as plt


def generate_point(func, num_point):
    # func: the parameter of function
    # num_point: the number of points needing to generate

    # generate point of x randomly
    point_x = np.random.random((num_point, 1)) * 6
    point_y = func(point_x)

    return point_x, point_y


def add_Gaussian_noise_on_points(point, num_point):
    # point: given point_x and point_y
    # para: the intensity of noise

    mu, sigma = 0, 0.1
    noise = np.random.normal(mu, sigma, num_point)
    return noise + point

if __name__ == "__main__":

    func = lambda x: np.sin(x)

    num_point = 10

    # # generate points which obeys the sin(x) computation
    point_x, point_y = generate_point(func, num_point)
    # Because those points generated by this method are too disperse,
    # so I use the next method that using the fixed interval.

    # 1. generate the points with fixed interval
    point_x = np.linspace(0, 6, 10)
    point_y = np.sin(point_x)

    print point_x, point_y

